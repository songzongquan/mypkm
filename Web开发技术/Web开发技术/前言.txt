Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-07-18T12:00:00+08:00

====== 前言 ======
创建日期 星期四 18 七月 2019

　　长期的工作学习经验表明，ＩＴ专业的知识面太广，并且又更新换代的极快，如果靠死记硬背来提高水平非常困难．想样样精确更是不可能的事情．就算你抓住一个方面，达到了精通，在不久的将来也有可能随着市场与技术的发展，你精通的领域已经被市场抛弃．更何况ｉｔ行业的特点是各种技术的综合运用，只会一门二门技术是不够份量的．
想要持续保持自已的技术价值，需要怎么办呢？
　　
　　我的理解，应该注意四个方面，第一，即然人的精力和记忆力是有限的．那么我们学习就要有侧重．把更多的精力用在学习基础知识，即相对不变的内容上，这些知识的投入产出比更大，更有价值，第二，即然ｉｔ行业是个多领域技术的综合运用，那我们的知识也要有相当的广度．不能只钻一门．第三，根据记忆曲线原理，学过的内容，过一段时间总是会忘记的，只有不断重复才能牢记，但是我们工作总是只做某一方面，不能每天都把学过的知识复习一遍．所以总是很多都会忘记．所以索性我们就不要专门去复习．而是提供一个快速检索知识的工具，需要用到时快速可以找到．如果实际的工作天天用某些知识，时间久了，自然就记住了．
第四，ｉｔ技术是一个实践性很强的学科，必须通过不断的练习才能达到某一方面的精通．也就是说要多写代码，多把自已的想法付诸于实作．不能光空想．

　　综上所述，我们应该采用这样一种方法来提高我们学习的效率：
　　　　
　　　　　１．把计算机科学基础知识作为重点，做到每天学习研究，日日练习．这些包括＂计算机组成与原理＂，＂数据结构与算法＂，＂编译原理＂，＂网络原理＂，＂操作系统＂，＂数据库原理与技术＂，＂离散数学＂，＂软件工程学＂等．这些也就是大学时期学习的基础课，包括用到的一些数学基础．如统计学，线性代数，微积分等．

　　　　　２．将自已当前或以后可能性最大的工作领域的知识体系进行梳理，可以到网上查找资料利用现成的知识体系，也可以结合自已的理解进行调整，以当前使用的为主，扩展知识为辅，再加上自已感兴趣的领域．制定学习计划，逐个击破，但要注意不要太深入，因为你没那么多精力与时间，你的主要精力还是夯实基础理论．那么要达到什么程度呢，我认为根据人类认识事物的客观规律，知识这个词的两个字的顺序很有讲究．就是先要＂知＂，然后再说＂识＂，也就是说先做到知道，然后再到认识．知道了就可以快速的达到知识的广度，根据需要再去认识，即达到必要的深度．广度可以让你的视野足够宽广，在碰到难题时能够发散思维，有更全面的理解，有更广泛的选择．找到最优化的解决方案．这个知识的梳理可以借助于思维导图，ｗｉｋｉ等工具进行整理，它一定是全面的，并且是＂知＂的层次，是原理，是理论．不涉及细节，不涉及实操．但同时一定要收集和准备好详细的参考资料，参考资料可来源于电子书，网站，等．这是一个甄选和加工的过程，保证你梳理过的知识仓库是全面，准确，可检索的．
　　　　　
　　　　　３．平时要花一定的精力，将这些知的层面的知识树加以复习，记忆．相关的细节不要试图去死记．这样做的至少让你可以成为一个理论上的大拿．应付找工作面试，作一个项目经理，架构师已经能唬住大部分人了．其它的细节，不用刻意的去死记，在工作中要用了，如果忘记了，迅速拿出你的检索工具，检索到，然后试着去用，用的多了自然记住，这样心不累，且比死记记的更深刻，如果碰到一些难题，解决后可以将解决方案专门的记录下来，因为同样的问题总会重复碰到．
　　　　　
　　　　　４．加强实践，除了工作内容，只要有时间，就可以针对你学习过的内容，自已创意一个项目或习题，进行理论结合实际的实操．特别是针对基础知识，一定要多多练习和运用．因为这些知识都有一定深度和难度．不是光看看文字就能深刻理解的．

　本次关于web开发技术的知识整理，即是按照以上的思想进行试验．做这件事的关键就是要坚持住，持续在这个知识树上进行补充调整，不要做重复无效的工作，要达到积累的作用．

===== 　　另一个思考： =====

　　　　　即然要学的内容很多，总得有一个时间的分配．而时间的分配分为两方面：１是先后次序，２是所占的比例．
　　　　　因为基础理论的重要性和价值非常大．所以时间分配的比例要重一些．应该占７成的时间．其它的占三成时间．
　　　　　再者，根据人认识事物的客面规律，总是从外到内，再从内到外．即先从表象，简单的入手，可以快速解决问题，获得工作技能和成就感．此时将内部原理细节当成不可见的黑箱子．然后再深入内部了解期底层机理，以达到知其然也知其所以然，从而达到可以解决上层知识的不足之处．从而从会简单的用工具，达到可以改进工具和创造工具．
　　　　　如果上去直接从最低层学习，有可能周期长，理解困难，并且长期在工作中用不上，反而会影响信息和学习的积极性．
　　　　　所以在本次ｗｅｂ开发技术的梳理学习上，我们要抛弃以前的习惯，将采用先直接接触上层技术．如流行框架，集成工具，以及必要的基础知识（够用即可，不作深入），尽快学会拿来用，在工作中项目中使用．然后再层层深入到底层原理和技术．

　　　　　

