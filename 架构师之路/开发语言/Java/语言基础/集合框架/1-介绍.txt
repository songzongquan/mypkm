Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-12-29T12:03:53+08:00

====== 1-介绍 ======
创建日期 星期六 29 十二月 2018

集合，有时叫做容器．仅仅是一个对象，将多个元素到组合在单个单元中。集合用于存储，检索，操作和传递聚合数据。

===== 什么是集合框架？ =====
集合框架就是用来表示集合操作集合的一个统一的架构，所有集合框架都应包括：
１．接口
２．实现
３．算法．一些方法，如排序，检索
其它语言的集合框架有：如ｃ＋＋的stl,smalltalk 的集合框架．

===== 集合框架的好处 =====

ava Collections Framework提供以下好处：

１．减少编程工作：通过提供有用的数据结构和算法，Collections Framework可以让您专注于程序的重要部分，而不是使其工作所需的低级“管道”。通过促进不相关API之间的互操作性，Java Collections Framework使您无需编写适配器对象或转换代码来连接API。
２．提高程序速度和质量：此集合框架提供有用数据结构和算法的高性能，高质量实现。每个接口的各种实现是可互换的，因此可以通过切换集合实现来轻松调整程序。因为你摆脱了编写自己的数据结构的苦差事，你将有更多的时间用于提高程序的质量和性能。
３．__允许不相关的API之间的互操作性__：集合接口是API通过其来回传递集合的本地语言。如果我的网络管理API提供了一组节点名称，并且您的GUI工具包需要一组列标题，那么我们的API将无缝地互操作，即使它们是独立编写的。
４．减少学习和使用新API的工作量：许多API自然地在输入上收集集合并将它们作为输出提供。在过去，每个这样的API都有一个专门用于操作其集合的小型API。这些ad hoc集合子API之间几乎没有一致性，因此您必须从头开始学习每一个，并且在使用它们时很容易出错。随着标准集合接口的出现，问题就消失了。
５．减少设计新API的工作量：这是之前优势的另一面。设计人员和实施人员每次创建依赖于集合的API时都不必重新发明轮子; 相反，他们可以使用标准的集合接口。
促进软件重用：符合标准集合接口的新数据结构本质上是可重用的。对于实现这些接口的对象进行操作的新算法也是如此


