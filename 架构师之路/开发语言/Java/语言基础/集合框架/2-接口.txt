Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-01-05T11:45:03+08:00

====== 2-接口 ======
创建日期 星期六 05 一月 2019

描述了核心集合接口，它是Java Collections Framework的核心和灵魂。__您将学习有效使用这些接口的一般准则，包括何时使用哪个接口。您还将学习每个接口的习惯用法，以帮助您充分利用接口__。

{{./pasted_image.png}}

说明：map　不是集合的子类，集合是范型的，创建时可以指定其元素的类型．

为了保持核心集合接口的数量可管理，Java平台不为每个集合类型的每个变体提供单独的接口。（这些变体可能包括不可变，固定大小和仅附加。）相反，每个接口中的修改操作都被指定为可选 - 给定的实现可以选择不支持所有操作。如果调用了不受支持的操作，则集合将抛出一个 UnsupportedOperationException。实现负责记录它们支持哪些可选操作。所有Java平台的通用实现都支持所有可选操作。

以下列表描述了核心集合接口：

１．　Collection　所有集合的公共行为．没有具体实现，但有它的子接口实现．
2. Set: 元素不可重复
3. Ｌｉｓｔ：有序的元素．可以指定插入位置，可以以索相取用元素，但元素可重复．
4. Queue -队列． 用于在处理之前保存多个元素的集合。除基本Collection操作外，Queue还提供额外的插入，提取和检查操作。
队列通常（但不一定）以FIFO（先进先出）方式对元素进行排序。除了优先级队列之外，优先级队列根据提供的比较器或元素的自然顺序对元素进行排序。无论使用什么顺序，队列的头部是通过调用remove或删除的元素poll。在FIFO队列中，所有新元素都插入队列的尾部。其他类型的队列可能使用不同的放置规则。每个Queue实现都必须指定其排序属性。另请参阅 队列接口部分。
５．　Deque - 双端队列，用于在处理之前保存多个元素的集合。除基本Collection操作外，Deque还提供额外的插入，提取和检查操作。
Deques可用作FIFO（先进先出）和LIFO（后进先出）。在双端队列中，可以在两端插入，检索和删除所有新元素。另请参阅 Deque接口部分。

６．Map - 将键映射到值的对象。A Map不能包含重复键; 每个键最多可以映射一个值。如果您已经使用过Hashtable，那么您已经熟悉了它的基础知识Map。另请参阅 “Map接口”部分。
最后两个核心集合接口仅仅是Set和的排序版本Map：

SortedSet- Set按升序维护其元素的a 。提供了几个额外的操作以利用订购。排序集用于自然排序的集合，例如单词列表和成员资格卷。另请参阅 SortedSet接口部分。
SortedMap- Map按升序键维护其映射的a 。这是Map类比的SortedSet。排序映射用于自然排序的键/值对集合，例如字典和电话目录。另请参阅 SortedMap接口部分
