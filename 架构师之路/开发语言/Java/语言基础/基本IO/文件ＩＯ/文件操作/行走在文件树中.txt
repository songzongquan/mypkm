Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-12-25T16:15:20+08:00

====== 行走在文件树中 ======
创建日期 星期二 25 十二月 2018

您是否需要创建一个递归访问文件树中所有文件的应用程序？也许您需要删除.class树中的每个文件，或者查找去年未访问过的每个文件。您可以使用FileVisitor界面执行此 操作。

本节包括以下内容：

===== FileVisitor接口 =====
要遍历文件树，首先需要实现一个FileVisitor。A FileVisitor指定遍历过程中关键点所需的行为：访问文件时，访问目录之前，访问目录之后，或发生故障时。该接口有四种方法对应于这些情况：

preVisitDirectory - 在访问目录条目之前调用。
postVisitDirectory - 访问目录中的所有条目后调用。如果遇到任何错误，则将特定异常传递给该方法。
visitFile - 调用正在访问的文件。文件BasicFileAttributes传递给方法，或者您可以使用 文件属性包来读取一组特定的属性。例如，您可以选择读取文件DosFileAttributeView以确定文件是否设置了“隐藏”位。
visitFileFailed - 无法访问文件时调用。特定异常将传递给该方法。您可以选择是抛出异常，将其打印到控制台还是日志文件，等等。
如果您不需要实现所有四种FileVisitor方法，而不是实现FileVisitor接口，则可以扩展 SimpleFileVisitor该类。该类实现FileVisitor接口，访问树中的所有文件，并IOError在遇到错误时抛出。您可以扩展此类并仅覆盖所需的方法。

===== 启动流程 =====
一旦实现了，您FileVisitor如何启动文件遍历？课堂上有两种walkFileTree方法Files。

walkFileTree(Path, FileVisitor)　第一种方法只需要一个起点和一个实例FileVisitor。您可以PrintFiles按如下方式调用文件访问者：
walkFileTree(Path, Set<FileVisitOption>, int, FileVisitor)　
第二种walkFileTree方法使您可以另外指定访问级别数和一组 FileVisitOption枚举的限制。如果要确保此方法遍历整个文件树，可以指定Integer.MAX_VALUE最大深度参数。

您可以指定FileVisitOption枚举，FOLLOW_LINKS表示应遵循符号链接。

===== 创建FileVisitor时的注意事项 =====
首先深度遍历文件树，但是您不能对访问子目录的迭代顺序做出任何假设。

如果您的程序将更改文件系统，则需要仔细考虑如何实现您的程序FileVisitor。

例如，如果您正在编写递归删除，则首先删除目录中的文件，然后再删除目录本身。在这种情况下，您删除该目录postVisitDirectory。

如果您正在编写递归副本，则preVisitDirectory在尝试将文件复制到其中之前创建新目录（in visitFiles）。如果要保留源目录的属性（类似于UNIX cp -p命令），则需要在复制文件后执行此操作postVisitDirectory。该 Copy示例显示了如何执行此操作。

如果您正在编写文件搜索，则在visitFile方法中执行比较。此方法查找符合条件的所有文件，但找不到目录。如果要查找文件和目录，还必须在preVisitDirectory或postVisitDirectory方法中执行比较。该 Find示例显示了如何执行此操作。

您需要决定是否要遵循符号链接。例如，如果要删除文件，则可能不建议使用符号链接。如果要复制文件树，则可能需要允许它。默认情况下，walkFileTree不遵循符号链接。

visitFile为文件调用该方法。如果您指定了该FOLLOW_LINKS选项，并且您的文件树具有指向父目录的循环链接，则使用该visitFileFailed方法在方法中报告循环目录FileSystemLoopException。

===== 控制流量 =====
也许您想要遍历文件树以查找特定目录，并且在找到时，您希望该进程终止。也许你想跳过特定的目录。

该FileVisitor方法返回一个 FileVisitResult值。您可以中止文件遍历过程或控制是否通过FileVisitor方法返回的值访问目录：

CONTINUE - 表示文件行走应继续。如果preVisitDirectory方法返回CONTINUE，则访问该目录。
TERMINATE - 立即中止文件行走。返回此值后，不会调用其他文件遍历方法。
SKIP_SUBTREE- preVisitDirectory返回此值时，将跳过指定的目录及其子目录。这个分支被“修剪”出树。
SKIP_SIBLINGS- preVisitDirectory返回此值时，不访问指定的目录，postVisitDirectory不调用指定的目录，也不会访问其他未访问的兄弟节点。如果从postVisitDirectory方法返回，则不会访问其他兄弟姐妹。基本上，在指定的目录中没有进一步发生。
