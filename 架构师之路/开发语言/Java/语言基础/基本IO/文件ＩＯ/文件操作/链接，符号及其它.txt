Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-12-25T16:11:37+08:00

====== 链接，符号及其它 ======
创建日期 星期二 25 十二月 2018

如前所述，java.nio.file包，Path特别是类，是“链接感知”。每个Path方法都会检测遇到符号链接时要执行的操作，或者提供一个选项，使您能够在遇到符号链接时配置行为。

到目前为止的讨论是关于 符号或软链接，但一些文件系统也支持硬链接。硬链接比符号链接更具限制性，如下所示：

链接的目标必须存在。
目录上通常不允许使用硬链接。
不允许硬链接跨越分区或卷。因此，它们不能跨文件系统存在。
硬链接看起来和行为像普通文件一样，因此很难找到它们。
出于所有意图和目的，硬链接与原始文件具有相同的实体。它们具有相同的文件权限，时间戳等。所有属性都相同。
由于这些限制，硬链接不像符号链接那样频繁使用，但这些Path方法可以与硬链接无缝协作。

有几种方法专门处理链接，并在以下部分中介绍：

===== 创建符号链接 =====
如果文件系统支持它，则可以使用该createSymbolicLink(Path, Path, FileAttribute<?>)方法创建符号链接 。第二个Path参数表示目标文件或目录，可能存在也可能不存在。

===== 创建硬链接 =====
您可以使用该方法创建指向现有文件的硬（或常规）链接 createLink(Path, Path)。第二个Path参数定位现有文件，它必须存在或NoSuchFileException抛出。

===== 检测符号链接 =====
要确定Path实例是否为符号链接，可以使用该 isSymbolicLink(Path)方法。

===== 寻找链接的目标 =====
您可以使用该readSymbolicLink(Path)方法获取符号链接的目标 ，如果Path它不是符号链接，则此方法抛出一个NotLinkException。
