Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-12-25T14:45:37+08:00

====== 文件操作 ======
创建日期 星期二 25 十二月 2018

的 Files类是另一主要入口点java.nio.file包。该类提供了一组丰富的静态方法，用于读取，写入和操作文件和目录。这些Files方法适用于Path对象的实例。在继续讨论其余部分之前，您应该熟悉以下常见概念：

释放系统资源
捕捉异常
可变参数
原子操作
方法链接
什么是全球化？
链接意识

===== 释放系统资源 =====
此API中使用的许多资源（例如流或通道）实现或扩展 java.io.Closeable接口。Closeable资源的要求是close必须调用该方法以在不再需要时释放资源。忽略关闭资源可能会对应用程序的性能产生负面影响.
try-with语句可以为你处理这一步．

===== 捕捉异常 =====
对于文件I / O，意外情况是生活中的事实：文件存在（或不存在）预期时，程序无法访问文件系统，默认文件系统实现不支持特定功能， 等等。可能遇到许多错误。

访问文件系统的所有方法都可以抛出IOException。最佳实践是通过将这些方法嵌入try-Java SE 7发行版中引入的with-resources语句来捕获这些异常。在try-with资源语句，编译器会自动生成的代码，关闭时不再需要的资源（S）的优势。以下代码显示了它的外观：
Charset charset = Charset.forName（“US-ASCII”）; 
String s = ...; 
try（__BufferedWriter writer = Files.newBufferedWriter（file，charset）__）{ 
	writer.write（s，0，s.length（））; 
} catch（IOException x）{ 
	System.err.format（“IOException：％s％n”，x）; 
}
如果只用try{ 语句用法，则需要在finally中对资源进行关闭．

除此之外IOException，还有许多具体的例外情况 FileSystemException。这个类有返回有关文件的一些有用的方法 （getFile），详细消息字符串 （getMessage），为什么文件系统操作失败的原因 （getReason），以及所涉及的“其他”的文件，如果有 （getOtherFile）。


===== 可变参数 =====

Files指定标志时，有几种方法接受任意数量的参数。例如，在以下方法签名中，CopyOption参数后面的省略号表示该方法接受可变数量的参数或varargs，因为它们通常被称为：

Path Files.move（Path，Path，CopyOption ...）
当方法接受varargs参数时，您可以将逗号分隔的值列表或值数组（CopyOption[]）传递给它。

===== 原子操作 =====
有些Files方法，例如move，可以在某些文件系统中以原子方式执行某些操作。

一个原子文件操作是不能被中断或“部分”执行的操作。执行整个操作或操作失败。当您在文件系统的同一区域上运行多个进程时，这很重要，并且您需要保证每个进程都访问一个完整的文件。

===== 方法链 =====
许多文件I / O方法都支持方法链的概念。

您首先调用返回对象的方法。然后，您立即在该对象上调用一个方法，该方法返回另一个对象，依此类推。许多I / O示例使用以下什么技术：

String value = Charset.defaultCharset().decode(buf).toString();
UserPrincipal group =
	file.getFileSystem().getUserPrincipalLookupService().
		 lookupPrincipalByName("me");
此技术生成紧凑的代码，使您可以避免声明不需要的临时变量。

===== 什么是glob =====
Files该类中的两个方法接受一个glob参数，但什么是glob？

您可以使用glob语法指定模式匹配行为。

glob模式被指定为字符串，并与其他字符串匹配，例如目录或文件名。Glob语法遵循几个简单的规则：

星号，*匹配任意数量的字符（包括无）。
两个星号，**工作*但跨越目录边界。此语法通常用于匹配完整路径。
问号，?恰好与一个字符匹配。
大括号指定子模式的集合。例如：
{sun,moon,stars} 匹配“太阳”，“月亮”或“星星”。
{temp*,tmp*} 匹配以“temp”或“tmp”开头的所有字符串。
方括号表示一组单个字符，或者在使用连字符（-）时，表示一系列字符。例如：
[aeiou] 匹配任何小写元音。
[0-9] 匹配任何数字。
[A-Z] 匹配任何大写字母。
[a-z,A-Z] 匹配任何大写或小写字母。
在方括号内，*，?，并\与自身匹配。
所有其他角色都匹配自己。
要匹配*，?或其他特殊字符，您可以使用反斜杠字符来转义它们\。例如：\\匹配单个反斜杠，并\?匹配问号。

glob语法功能强大且易于使用。但是，如果它不足以满足您的需求，您还可以使用正则表达式

===== 链接意识 =====
该Files课程是“链接感知”。每个Files方法都会检测遇到符号链接时要执行的操作，或者提供一个选项，使您能够在遇到符号链接时配置行为。

