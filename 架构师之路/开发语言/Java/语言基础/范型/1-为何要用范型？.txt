Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-12-12T16:17:14+08:00

====== 1-为何要用范型？ ======
创建日期 星期三 12 十二月 2018

===== 为什么要使用范型？ =====
简而言之，泛型__使类型__（类和接口）在定义类，接口和方法时__成为参数__。与方法声明中使用的更熟悉的形式参数非常相似，类型参数为您提供了一种使用不同输入重用相同代码的方法。不同之处在于形式参数的输入是值，而类型参数的输入是类型。

使用泛型的代码比非泛型代码有许多__好处__：

==== 在编译时进行更强大的类型检查。 ====
Java编译器将强类型检查应用于通用代码，并在代码违反类型安全时发出错误。修复编译时错误比修复运行时错误更容易，这很难找到。


以下没有泛型的代码片段需要强制转换：
List list = new ArrayList（）; 
list.add（ “你好”）; 
String s = （String） list.get（0）;

==== 写使用泛型时，代码不需要转换：重 ====
List <String> list = new ArrayList <String>（）; 
list.add（ “你好”）; 
String s = list.get（0）; //没有演员

==== 使程序员能够实现通用算法。 ====
通过使用泛型，程序员可以实现通用算法，这些算法可以处理不同类型的集合，可以自定义，并且类型安全且易于阅读。
