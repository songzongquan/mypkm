Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-12-27T12:13:13+08:00

====== 6-量词 ======
创建日期 星期四 27 十二月 2018

词允许您指定要匹配的出现次数。为方便起见，下面介绍了描述贪婪，不情愿和占有量词的Pattern API规范的三个部分。乍一看，它可能出现的量词X?，X??和X?+做同样的事情，因为他们都承诺要匹配“ X一次或完全没有”。有一些细微的实现差异，将在本节末尾附近解释。

贪婪	不情愿的	占有	含义
X?	X??	X?+	X，曾经或根本没有
X*	X*?	X*+	X，零次或多次
X+	X+?	X++	X，一次或多次
X{n}	X{n}?	X{n}+	X究竟n倍
X{n,}	X{n,}?	X{n,}+	X，至少是n时候
X{n,m}	X{n,m}?	X{n,m}+	X，至少n但不超过m一次

===== 零长度匹配 =====
即匹配的开始索引和结束一样，一般出现在用？＊时，含　有０次．

===== 使用量词捕获组和字符类 =====
到目前为止，我们只对包含一个字符的输入字符串测试了量词。实际上，量词只能一次附加到一个字符，因此正则表达式“abc +”表示“a，后跟b，后跟c一次或多次”。这并不意味着“abc”一次或多次。但是，量词也可以附加到 字符类和 捕获组，例如[abc]+（a或b或c，一次或多次）或(abc)+（组“abc”，一次或多次）。

===== 贪婪，不情愿和占有量词之间的差异 =====
贪婪，不情愿和占有欲量词之间存在细微差别。

贪心量词被认为是“贪婪的”，因为它们在尝试第一次匹配之前强制匹配器读入或吃掉整个输入字符串。如果第一次匹配尝试（整个输入字符串）失败，匹配器将输入字符串后退一个字符并再次尝试，重复该过程直到找到匹配项或者没有剩余字符可以退出。根据表达式中使用的量词，它将尝试匹配的最后一件事是1或0个字符。

然而，不情愿的量词采用相反的方法：它们从输入字符串的开头开始，然后不情愿地一次吃一个字符寻找匹配。他们尝试的最后一件事是整个输入字符串。

最后，占有量词总是占用整个输入字符串，尝试一次（并且只有一次）匹配。与贪婪的量词不同，占有量词永远不会退缩，即使这样做也会使整体匹配成功。
