Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-12-27T12:09:29+08:00

====== 5-预定义的字符类 ======
创建日期 星期四 27 十二月 2018

该 PatternAPI包含了一些有用的预定义的字符类，它提供了常用的正则表达式方便的简写：


构造	描述
.	任何字符（可能与行终止符匹配也可能不匹配）
\d	一个数字： [0-9]
\D	非数字： [^0-9]
\s	空白字符： [ \t\n\x0B\f\r]
\S	非空白字符： [^\s]
\w	一个字的字符： [a-zA-Z_0-9]
\W	非单词字符： [^\w]
在上表中，左侧列中的每个构造都是右侧列中字符类的简写。例如，\d表示一个数字范围（0-9），\w表示一个单词字符（任何小写字母，任何大写字母，下划线字符或任何数字）。尽可能使用预定义的类。它们使您的代码更易于阅读，并消除格式错误的字符类引入的错误。

以反斜杠开头的构造称为转义构造。我们预览中逃脱构建 字符串文字，我们提到使用反斜线和部分\Q和\E报价。如果在字符串文字中使用转义构造，则必须在反斜杠前面加上另一个反斜杠，以便编译字符串。例如：

 
private final String REGEX =“\\ d”; //一个数字
在这个例子中\d是正则表达式; 编译代码需要额外的反斜杠。但是，测试工具直接从中读取表达式Console，因此不需要额外的反斜杠。

