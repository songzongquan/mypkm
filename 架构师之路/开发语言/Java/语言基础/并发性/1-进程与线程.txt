Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-12-17T16:10:53+08:00

====== 1-进程与线程 ======
创建日期 星期一 17 十二月 2018

在并发编程中有两个实现单元：进程和线程，java平台一般用线程实现，但进程也很重要。
在单一cpu核中，也可以实现并发，但同一时刻只有一个线程在活动，它通过os的时间分布技术实现。在多核处理器中，就是真正的并发了。

===== 进程 =====

进程具有独立的执行环境。进程通常具有完整的私有基本运行时资源集; 特别是，每个进程都有自己的内存空间。

流程通常被视为程序或应用程序的同义词。但是，用户看作单个应用程序的内容实际上可能是一组协作进程。为了促进进程之间的通信，大多数操作系统都支持进程间通信（IPC）资源，例如管道和套接字。IPC不仅用于同一系统上的进程之间的通信，还用于不同系统上的进程。

Java虚拟机的大多数实现都作为单个进程运行。Java应用程序可以使用__ProcessBuilder__对象创建其他进程 。多进程应用程序超出了本课程的范围。

===== 线程 =====
线程有时被称为轻量级进程。进程和线程都提供执行环境，但创建新线程所需的资源比创建新进程要少。

线程存在于进程中 - 每个进程至少有一个进程。线程共享进程的资源，包括内存和打开文件。这使得有效但可能有问题的通信成为可能。

多线程执行是Java平台的基本特性。每个应用程序至少有一个线程 - 或几个，如果你计算“系统”线程，它们执行内存管理和信号处理等操作。但是从应用程序员的角度来看，你只从一个线程开始，称为主线程。该线程具有创建其他线程的能力
