Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-12-17T17:34:27+08:00

====== 饥饿和活锁 ======
创建日期 星期一 17 十二月 2018

饥饿和活锁是一个问题而不是死锁，但仍然是每个并发软件设计者都可能遇到的问题。

饥饿
Starvation描述了一种情况，即线程无法获得对共享资源的定期访问，并且无法取得进展。当“贪婪”线程使共享资源长时间不可用时会发生这种情况。例如，假设一个对象提供了一个通常需要很长时间才能返回的同步方法。如果一个线程经常调用此方法，则通常还需要阻止对同一对象进行频繁同步访问的其他线程。

活锁
线程通常用于响应另一个线程的操作。如果另一个线程的操作也是对另一个线程的操作的响应，则可能导致活锁。与死锁一样，活锁线程无法取得进一步进展。但是，线程没有被阻塞 - 它们只是太忙于相互响应以恢复工作。这相当于两个试图在走廊里互相通过的人：Alphonse向左移动让Gaston通过，而Gaston向右移动让Alphonse通过。看到他们仍在相互阻挡，Alphone向右移动，而Gaston向左移动。他们还在互相阻挡，所以......
