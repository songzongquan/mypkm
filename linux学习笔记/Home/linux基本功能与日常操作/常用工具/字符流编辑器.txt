Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-06-22T18:04:10+08:00

====== 字符流编辑器 ======
Created 星期五 22 六月 2018

===== 功能特点 =====
1. 在一个或多个文件上实现自动编辑
2. 简化对多个文件执行相同的编辑处理工作
3. 编写转换程序

它也是来自于可编程的编辑器ed 了解ed的用法 ，就可以理解sed的用法
sed 的变化增加字符流编辑功能 ，但它不能交互式编辑
sed 缺省就是全局操作。

awk 来自 grep 但最终也是来自ed



===== Sed =====
而且 sed 还可以将数据进行取
代、删除、新增、撷取特定行等等


===== 具体参数 =====


[dmtsai@study ~]$ sed [-nefr] [动作] 文件 
选项与参数：
-n ：使用安静（silent）模式。在一般 sed 的用法中，所有来自 STDIN 的数据一般都会被列出到屏幕上。
但如果加上 -n 参数后，则只有经过 sed 特殊处理的那一行（或者动作）才会被列出来。
-e ：直接在命令行界面上进行 sed 的动作编辑； 即可用多重指令，也可以用;号隔开，而不用e
-f ：直接将 sed 的动作写在一个文件内， -f filename 则可以执行 filename 内的 sed 动作；
-r ：sed 的动作支持的是延伸型正则表达式的语法。（默认是基础正则表达式语法）
-i ：直接修改读取的文件内容，而不是由屏幕输出。
动作说明： [n1[,n2]]function
n1, n2 ：不见得会存在，一般代表“选择进行动作的行数”，举例来说，如果我的动作
是需要在 10 到 20 行之间进行的，则“ 10,20[动作行为] ”（ 如果n1,n2后面加！号表示相反的意思，即除了这两行之间的其它行）
function 有下面这些咚咚：
a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现（目前的下一行）～
c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！
d ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚；
i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现（目前的上一行）；
p ：打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行～
s ：取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正则表达式！
例如 1,20s/old/new/g 就是啦！

===== 分组：{} =====
用大括号可以将地址嵌套在另一个地址上，或者执行多个命令
1,20{
[[/test/d]]
/hello/d
}
要求第一个左括号在行尾，右括号在新的一行，中间是嵌套的指令。

===== 脚本执行原理 =====

1. 脚本的中的所有指令都会对文本的每一行（全局）进行处理,即对一行应用所有的指令后，再处理下一行
2. 除非用地址进行限制 后减少被 处理的行
3. 处理后，缺省不会修改原文件。而示打印在标准输出
